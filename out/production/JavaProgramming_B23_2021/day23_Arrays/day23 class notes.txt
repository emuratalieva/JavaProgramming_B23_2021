06/28/2021
Topics: Nested Loop
		Arrays Intro
		Arrays Utility: toString, sort, equals

Package Name: day23_Arrays

warmup tasks:
	1. Write a program that can find the frequency of any given character from a string 
			Ex:
				str = "aabcccd";

				input: 'c'
				output: 3

				input: 'e'
				output: 0


	2. find the frequency of each characters from astring

			str = "aabcccd";

			output:
				a2b1c3d1



nested loop: loop inside another loop (inner loop & outer loop)

		
		1 2 3 4 5
		1 2 3 4 5
		1 2 3 4 5
		1 2 3 4 5
		1 2 3 4 5




	********************
    ********************
    ********************
    ********************
    ********************
    ********************



     *
     **
     ***
     ****
     *****
     ******
     *******
     ********



Data Structure: to use the data effeciently, store data in organized manner
		
		1. Array
		2. Collection
		3. Maps


variables:
	DataType variableName = Data;
	int n = 200;
	String s = "Cat";
	double d = 0.5;
	...



Arrays variables: a variable that can have multiple data

			ordered data structure (has index numbers)

			Size is fixed, we cannot add or remove

declaring an array variuable
	DataType[] variableName = {data1, data2, data3 ...};
	String[] group1 = { "Muhtar", "Asiya", "Mmehmet" };

	how to retrieve data from array?
		variableName[index]

	how to replace the element in array?
		variableName[index] = new Data


	initializing the size of the array only:
		DataType[] variableName = new  DataType[size];



Arrays Utility: Arrays class is a utility of the array
				Arrays class is presented "java.util"

				import java.util.Arrays;







task:
	1. create an array of string that conatins the names of months


	2. a program that can find the maximum number from an array of integers

    ex:
            array = {10,5, 4, 400, 50, 0, -1};

            output: 400


	3. write a program that can find the minimum number from an array of integers

	    ex:
	            array = {10,5, 4, 400, 50, 0, -1};

	            output: -1


    4. AverageNumber
    		1. Ask the user how many numbers he/she wanst to enter
    		2. get all the inputs from the user
    		3. return the average number

    		[1,2,3,4,5]

    		average: (1+2+3+4+5) / 5


default values:
	byte, short, int, long ===> 0
	float, double ==> 0.0



tomorrow: Array Continue
		  for each loop

Thursday: Multi-dimentional arrays









